{"version":3,"sources":["util/generateVSProj.js"],"names":[],"mappings":"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","file":"util/generateVSProj.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\r\n\r\nimport through from 'through2';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport gulpUtil from 'gulp-util';\r\nimport extend from 'extend';\r\nimport xmldom from 'xmldom';\r\n\r\nfunction generateVSProj(proj, opt = {}) {\r\n  const PluginError = gulpUtil.PluginError;\r\n  const DOMParser = xmldom.DOMParser;\r\n  const XMLSerializer = xmldom.XMLSerializer;\r\n  const files = [];\r\n\r\n  if (!proj) {\r\n    throw new PluginError('vsgen', 'Missing proj parameter for vsgen');\r\n  }\r\n\r\n  const config = {\r\n    'tags': {\r\n      '.ts': 'TypeScriptCompile',\r\n      '.tsx': 'TypeScriptCompile',\r\n      '..': 'Content',\r\n    },\r\n    'template': path.join(__dirname, '..', 'content', 'template.proj'),\r\n  };\r\n  extend(true, config, opt);\r\n\r\n  function bufferContent(file, enc, cb) {\r\n    if (!file.isNull()) {\r\n      files.push(file.relative);\r\n    }\r\n    cb();\r\n  }\r\n\r\n  function endStream(cb) {\r\n    const that = this;\r\n    fs.readFile(config.template, 'utf8', (err, content) => {\r\n      if (err) {\r\n        that.emit('error', err);\r\n        cb();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const dom = new DOMParser().parseFromString(content);\r\n        const target = dom.getElementById('vsgen-target');\r\n\r\n        if (!target) {\r\n          throw new PluginError('vsgen', 'Could not find vsgen-target element');\r\n        }\r\n        target.removeAttribute('id'); // VS or MSBuild might not like this.\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n          const file = files[i];\r\n          const ext = path.extname(file);\r\n          const tagName = config.tags.hasOwnProperty(ext)\r\n            ? config.tags[ext]\r\n            : config.tags['..'];\r\n\r\n          const element = dom.createElementNS(target.namespaceURI, tagName);\r\n          element.setAttribute('Include', file);\r\n          target.appendChild(element);\r\n        }\r\n\r\n        const finalContent = new XMLSerializer().serializeToString(dom);\r\n        fs.writeFile(proj, finalContent, 'utf8', (writeError) => {\r\n          if (writeError) {\r\n            that.emit('error', writeError);\r\n          }\r\n          cb();\r\n        });\r\n      } catch (e) {\r\n        that.emit('error', e);\r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  return through.obj(bufferContent, endStream);\r\n}\r\n\r\nexport default generateVSProj;\r\n"],"sourceRoot":"/source/"}