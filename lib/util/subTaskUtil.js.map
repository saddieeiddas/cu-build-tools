{"version":3,"sources":["util/subTaskUtil.js"],"names":[],"mappings":"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","file":"util/subTaskUtil.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport minimist from 'minimist';\nimport path from 'path';\nimport globby from 'globby';\nimport extend from 'extend';\nimport util from 'gulp-util';\nimport chug from 'gulp-chug';\n\n/**\n * Resolve a Component Directory from the Root directory\n *\n * It will find the component directory containing \"cu-build.config.js\"\n * It will only look into 3 directory levels, this should be enough depth for component nesting.\n */\nexport function resolveComponentDirectory(root, component) {\n  // search for the component containing a cu-build.config.js\n  const globs = [\n    root + '/' + component + '/cu-build.config.js',\n    root + '/*/' + component + '/cu-build.config.js',\n    root + '/*/*/' + component + '/cu-build.config.js',\n  ];\n  const directories = globby.sync(globs);\n  let directory = false;\n  if (directories.length > 0) {\n    directory = path.dirname(directories[0]);\n  }\n  return directory;\n}\n\n/**\n * Resolve a Sub Task based on process arguments\n * It should match tasks as \"component::task\"\n * It will check that a \"cu-build.config.json\" exists in the target component directory\n * Example: component-one::build -> would execute build on component-one\n */\nfunction resolveTask(root) {\n  const argv = minimist(process.argv.slice(2));\n  if (argv._.length > 0) {\n    const parts = argv._[0].split('::');\n    if (parts.length >= 2 && parts[1] !== '') {\n      const directory = resolveComponentDirectory(root, parts[0]);\n      if (directory) {\n        return {\n          'component': parts[0],\n          'task': parts[1],\n          'gulpTask': parts.join('::'),\n        };\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Resolve all Component Directories from the Root directory\n *\n * It will find all component directories containing \"cu-build.config.js\"\n * It will only look into 3 directory levels, this should be enough depth for component nesting.\n */\nexport function findComponentDirectories(root) {\n  // search for all components containing a cu-build.config.js\n  const globs = [\n    root + '/*/cu-build.config.js',\n    root + '/*/*/cu-build.config.js',\n    root + '/*/*/*/cu-build.config.js',\n  ];\n  const directories = globby.sync(globs).map((p) => path.dirname(p));\n  return directories;\n}\n\n/**\n * Create a chug argument\n *\n * This will convert an object argument into a switch for chug\n * Example: {path: 'here'} will become ['--path', 'here']\n */\nexport function createArgument(argv, argName) {\n  const args = [];\n  if (argv[argName]) {\n    args.push('--' + argName);\n    if (typeof argv[argName] !== 'boolean') {\n      args.push(argv[argName]);\n    }\n  }\n  return args;\n}\n\n/**\n * Get arguments to pass to chug\n *\n * This will build a set of arguments ready to be passed to chug\n */\nexport function getSubTaskArguments(options) {\n  const argv = minimist(process.argv.slice(2));\n  if (options && options.args) {\n    extend(true, argv, options.args);\n  }\n  if (argv._) {\n    delete argv._;\n  }\n  let subArgs = [];\n\n  subArgs = subArgs.concat(createArgument(argv, 'port'));\n  subArgs = subArgs.concat(createArgument(argv, 'publish'));\n\n  return subArgs;\n}\n\n/**\n * Execute a Sub Task on specific component\n * Options:\n *    path: the root path\n *    component: the component to execute task on\n *    task: the task to execute\n *    args: the override arguments to pass to chug\n */\nexport function executeTask(gulp, options, cb) {\n  const directory = resolveComponentDirectory(options.path, options.component);\n  if (directory) {\n    gulp.src(directory + '/gulpfile.babel.js', {'read': false})\n      .pipe(chug({\n        'tasks': [options.task],\n        'args': getSubTaskArguments({\n          'args': options.args || {},\n        }),\n      }))\n      .on('end', cb);\n  } else {\n    util.log(util.colors.red(`Could not find Component: \"${options.component}\"`));\n    cb();\n  }\n}\n\n/**\n * Execute a Sub Task on all components\n * Options:\n *    path: the root path\n *    task: the task to execute\n *    args: the override arguments to pass to chug\n */\nexport function executeTaskOnAllComponents(gulp, options, cb) {\n  const gulps = findComponentDirectories(options.path).map((dir) => dir + '/gulpfile.babel.js');\n  gulp.src(gulps, {'read': false})\n    .pipe(chug({\n      'tasks': [options.task],\n      'args': getSubTaskArguments({\n        'args': options.args || {},\n      }),\n    }))\n    .on('end', cb);\n}\n\nconst subTaskUtil = {\n  'resolveTask': resolveTask,\n  'resolveComponentDirectory': resolveComponentDirectory,\n  'findComponentDirectories': findComponentDirectories,\n  'getSubTaskArguments': getSubTaskArguments,\n  'createArgument': createArgument,\n  'executeTask': executeTask,\n  'executeTaskOnAllComponents': executeTaskOnAllComponents,\n};\n\nexport default subTaskUtil;\n"],"sourceRoot":"/source/"}